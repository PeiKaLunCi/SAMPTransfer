job_name: local_test
seed_everything: 72
model:
  optim: "radam"
  lr_sch:
  warmup_start_lr: 1e-3
  warmup_epochs: 250
  eta_min: 5e-5
  lr: 0.0001563663718906821
  lr_decay_step: 25000
  lr_decay_rate: 0.5
  weight_decay: 6.059722614369727e-06
  alpha_cosine: True
  bow_clr: False
  clr_loss: False
  clr_on_bow: False
  graph_conv_opts:
    use_graph_conv: False
    k: 5
    aggregation: mean
    mlp: False
    task_adapt: False
    m_scale:
      use_m_scale: False
      m_scale_projector_dim: 512
      attn_pooling: False
      attn_inner_dim: 64
      heads: 1
      graph_conv: False
      resizing: interpolate
  mpnn_loss_fn:
    class_path: losses.CrossEntropyLabelSmooth
    init_args:
      num_classes: ${data.batch_size}
  mpnn_opts:
    _use: True
    loss_cnn: True
    scaling_ce: 1
    task_adapt: False
    temperature: 0.2
    output_train_gnn: plain
    graph_params:
      sim_type: "correlation"
      thresh: "no" #0
      set_negative: "hard"
    gnn_params:
      pretrained_path: "no"
      red: 1
      cat: 0
      every: 0
      gnn:
        num_layers: 2
        aggregator: "add"
        num_heads: 8
        attention: "dot"
        mlp: 1
        dropout_mlp: 0.1
        norm1: 1
        norm2: 1
        res1: 1
        res2: 1
        dropout_1: 0.1
        dropout_2: 0.1
        mult_attr: 0
      classifier:
        neck: 1
        num_classes: 0
        dropout_p: 0.4
        use_batchnorm: 0
  vicreg_opts:
    use_vicreg: False
  bow_levels: [ "block3", "block4" ]
  bow_extractor_opts:
    inv_delta: 10
    num_words: 8192
  bow_predictor_opts:
    kappa: 5
  alpha: 0.99
  feature_extractor:
    class_path: bow.feature_extractor.CNN_4Layer
    init_args:
      in_channels: 3
      hidden_size: 64
      out_channels: 64
      global_pooling: False
      graph_conv: False
trainer:
  gpus: -1
  #  gradient_clip_val: 0.5
  num_sanity_val_steps: 1
  fast_dev_run: 1
  max_epochs: 1500
  limit_train_batches: 100
  limit_val_batches: 15
  #  logger:
  #    class_path: pytorch_lightning.loggers.CometLogger
  #    init_args:
  #      save_dir: "./comet"
  #      api_key: ${oc.env:COMET_API_KEY}
  #      rest_api_key: ${oc.env:COMET_API_KEY}
  #      project_name: testing
  #      experiment_name: ${job_name}
  #    class_path: pytorch_lightning.loggers.WandbLogger
  #    init_args:
  #      project: testing
  #      save_dir: wandb_logs
  #      log_model: True
  callbacks:
    - class_path: pytorch_lightning.callbacks.model_summary.ModelSummary
      init_args:
        max_depth: 3
    #    - class_path: callbacks.EmbeddingLogger
    #      init_args:
    #        every_n_steps: 1
    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "./ckpts/"
        monitor: "val_accuracy"
        save_top_k: 10
        every_n_epochs: 1
        mode: "max"

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        patience: 200
        monitor: "val_accuracy"
        mode: "max"
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

data:
  dataset: "miniimagenet"
  #  datapath: ../data/
  datapath: /home/ojass/projects/unsupervised-meta-learning/data/untarred/
  full_size_path: /home/ojass/projects/data/processed_images/
  #  datapath: /home/nfs/oshirekar/unsupervised_ml/data/miniimagenet
  n_support: 1
  n_query: 3
  batch_size: 64
  num_workers: 0
  img_size_orig: [ 84, 84 ]
  img_size_crop: [ 84, 84 ]
  no_aug_support: True